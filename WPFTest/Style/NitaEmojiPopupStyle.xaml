<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:nita="clr-namespace:WPFTest.NitaCustomControl"
    xmlns:stfu="clr-namespace:Stfu.Wpf;assembly=Stfu">

    <!--#region MergedDictionaries-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Style/NitaScrollViewerStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#endregion-->

    <!--#region  Converter-->
    <BooleanToVisibilityConverter x:Key="BoolToVis" />
    <!--#endregion-->

    <!--#region  VariationPopupTemplate-->
    <ControlTemplate x:Key="VariationPopupTemplate" TargetType="ContentControl">
        <ListView
            Name="VariationListView"
            Height="Auto"
            MaxWidth="280"
            Margin="1"
            Padding="0"
            Background="Transparent"
            BorderThickness="0"
            ItemsSource="{Binding VariationList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:NitaEmojiPopup}}}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Border Background="Transparent" CornerRadius="5">
                        <Button
                            x:Name="PART_PickButton"
                            Width="40"
                            Height="40"
                            Margin="0"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            ToolTip="{Binding Path=Name, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}">
                            <Image Height="24" nita:NitaEmojiImage.Source="{Binding Path=Text, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" />
                        </Button>
                    </Border>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region NitaEmojiPickerToggleButtonStyle-->
    <Style x:Key="CellToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Padding="5"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{DynamicResource DefaultCornerRadius}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DefaultHoverColor}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource DefaultHoverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DefaultClickColor}" />
                            <Setter TargetName="border" Property="Opacity" Value="{DynamicResource DefaultOpacity}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource DefaultClickColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource DisableForegroundText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region CellTemplate-->
    <DataTemplate x:Key="CellTemplate">
        <ToggleButton
            x:Name="PART_EmojiCellButton"
            Width="40"
            Height="40"
            Background="Transparent"
            BorderBrush="Transparent"
            Focusable="False"
            IsHitTestVisible="{Binding ElementName=PART_VariationPopup, Path=IsOpen, Mode=OneWay, Converter={stfu:BoolInverter}}"
            Style="{StaticResource CellToggleButtonStyle}"
            ToolTip="{Binding Name}">
            <Grid>
                <Image
                    Height="24"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    nita:NitaEmojiImage.Source="{Binding Text}" />
                <Polygon
                    Width="6"
                    Height="6"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Fill="Black"
                    Points="0,1 1,1 1,0"
                    Stretch="Fill"
                    Visibility="{Binding HasVariations, Converter={StaticResource BoolToVis}}" />
                <Popup
                    x:Name="PART_VariationPopup"
                    Margin="1"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsChecked, ElementName=PART_EmojiCellButton, Mode=TwoWay}"
                    StaysOpen="False">
                    <Border CornerRadius="5">
                        <ContentControl Template="{StaticResource ResourceKey=VariationPopupTemplate}" />
                    </Border>
                </Popup>

            </Grid>
        </ToggleButton>
    </DataTemplate>
    <!--#endregion-->

    <!--#region NitaEmojiPopupListView-->
    <ControlTemplate x:Key="PART_EmojiListViewTemplate" TargetType="ContentControl">
        <ListView
            Name="PART_EmojiListView"
            Height="Auto"
            MaxHeight="320"
            Margin="2,2,5,2"
            Padding="0"
            stfu:Behaviors.SmoothScrolling="True"
            Background="Transparent"
            BorderThickness="0"
            ItemsSource="{Binding EmojiChunkList}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Disabled"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <ItemsControl ItemTemplate="{StaticResource ResourceKey=CellTemplate}" ItemsSource="{Binding}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Template>
                <ControlTemplate>
                    <nita:NitaScrollViewer VerticalScrollBarVisibility="Auto">
                        <ItemsPresenter />
                    </nita:NitaScrollViewer>
                </ControlTemplate>
            </ListView.Template>
        </ListView>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region NitaEmojiPopup  TabItemStyle-->
    <Style x:Key="NitaEmojiPopupTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <nita:NitaBorder
                        x:Name="Border"
                        Margin="3,3,0,0"
                        Padding="3"
                        Background="{DynamicResource DefaultHoverBackgroundColor}"
                        BorderThickness="0"
                        CornerRadius="{DynamicResource DefaultHeaderCornerRadius}"
                        SizeType="Large">
                        <ContentPresenter
                            x:Name="ContentSite"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(nita:NitaBorder.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#adadad" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </nita:NitaBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region NitaEmojiPopupTabControlStyle TabControlStyle-->
    <Style x:Key="NitaEmojiPopupTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource NitaEmojiPopupTabItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid Background="{DynamicResource DefaultBackgroundColor}" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Margin="0,0,0,5" CornerRadius="{DynamicResource DefaultMinCornerRadius}">
                            <TabPanel
                                x:Name="HeaderPanel"
                                Grid.Row="0"
                                Margin="0,0,4,-1"
                                Panel.ZIndex="1"
                                Background="{DynamicResource DefaultBackgroundColor}"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" />
                        </Border>
                        <Border
                            x:Name="Border"
                            Grid.Row="1"
                            Background="{DynamicResource DefaultHoverBackgroundColor}"
                            BorderThickness="1"
                            CornerRadius="{DynamicResource DefaultMinCornerRadius}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="4"
                                ContentSource="SelectedContent" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region NitaEmojiImageStyle-->
    <Style TargetType="{x:Type nita:NitaEmojiPopup}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type nita:NitaEmojiPopup}">
                    <Popup
                        x:Name="PART_EmojiPopup"
                        Width="Auto"
                        Margin="0"
                        AllowsTransparency="True"
                        IsOpen="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:NitaEmojiPopup}}}"
                        StaysOpen="false">
                        <TabControl
                            x:Name="PART_TabControl"
                            Padding="0"
                            ItemsSource="{Binding EmojiGroups, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type nita:NitaEmojiPopup}}}"
                            Style="{StaticResource NitaEmojiPopupTabControlStyle}">
                            <TabControl.ItemTemplate>
                                <DataTemplate>
                                    <Image Height="24" nita:NitaEmojiImage.Source="{Binding Icon}">
                                        <Image.ToolTip>
                                            <TextBlock Text="{Binding Name}" />
                                        </Image.ToolTip>
                                    </Image>
                                </DataTemplate>
                            </TabControl.ItemTemplate>
                            <TabControl.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Background="Transparent" Orientation="Vertical">
                                        <TextBlock
                                            Margin="4"
                                            FontStyle="Italic"
                                            Foreground="{DynamicResource DefaultForeground}"
                                            Text="{Binding Name}" />
                                        <ContentControl Template="{StaticResource ResourceKey=PART_EmojiListViewTemplate}" />
                                    </StackPanel>
                                </DataTemplate>
                            </TabControl.ContentTemplate>
                        </TabControl>
                    </Popup>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>