<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:WPFTest.Converter"
    xmlns:nita="clr-namespace:WPFTest.NitaCustomControl">
    <convert:MouseOverStyleToStringConverter x:Key="MouseOverStyleToStringConverter" />

    <Style TargetType="{x:Type nita:NitaBorder}">
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource DefaultBorder}" />
        <Setter Property="CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundColor}" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1" />
                    <RotateTransform x:Name="rotateTransform" Angle="0" />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="Yellow" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding MouseOverStyle, Converter={StaticResource MouseOverStyleToStringConverter}, RelativeSource={RelativeSource Self}}" Value="Zoom" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                            <RotateTransform Angle="0" />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding MouseOverStyle, Converter={StaticResource MouseOverStyleToStringConverter}, RelativeSource={RelativeSource Self}}" Value="ChangeColor" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource Self}}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding MouseOverStyle, RelativeSource={RelativeSource Self}, Converter={StaticResource MouseOverStyleToStringConverter}}" Value="ZoomAndChangeColor" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.1" />
                            <RotateTransform Angle="0" />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource Self}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>